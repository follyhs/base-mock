package ft

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) ShowJsonItemNameFtApi(request *ShowJsonItemNameFtApiRequest) (response *ShowJsonItemNameFtApiResponse, err error) {
	response = CreateShowJsonItemNameFtApiResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) ShowJsonItemNameFtApiWithChan(request *ShowJsonItemNameFtApiRequest) (<-chan *ShowJsonItemNameFtApiResponse, <-chan error) {
	responseChan := make(chan *ShowJsonItemNameFtApiResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ShowJsonItemNameFtApi(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) ShowJsonItemNameFtApiWithCallback(request *ShowJsonItemNameFtApiRequest, callback func(response *ShowJsonItemNameFtApiResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ShowJsonItemNameFtApiResponse
		var err error
		defer close(result)
		response, err = client.ShowJsonItemNameFtApi(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type ShowJsonItemNameFtApiRequest struct {
	*requests.RpcRequest
	StringList string `position:"Query" name:"StringList"`
}

type ShowJsonItemNameFtApiResponse struct {
	*responses.BaseResponse
	StringList []string `json:"StringList"`
	ArrayValue []struct {
		ArrayChildValue string `json:"ArrayChildValue"`
	} `json:"ArrayValue"`
}

func CreateShowJsonItemNameFtApiRequest() (request *ShowJsonItemNameFtApiRequest) {
	request = &ShowJsonItemNameFtApiRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Ft", "2015-01-01", "ShowJsonItemNameFtApi", "", "")
	return
}

func CreateShowJsonItemNameFtApiResponse() (response *ShowJsonItemNameFtApiResponse) {
	response = &ShowJsonItemNameFtApiResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
