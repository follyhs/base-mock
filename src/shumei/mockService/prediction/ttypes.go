// Autogenerated by Thrift Compiler (0.9.3)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package prediction

import (
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

var GoUnusedProtection__ int

// Attributes:
//  - RequestId
//  - ServiceId
//  - Type
//  - Organization
//  - AppId
//  - TokenId
//  - Timestamp
//  - Data
type PredictRequest struct {
	RequestId    *string `thrift:"requestId,1" json:"requestId,omitempty"`
	ServiceId    *string `thrift:"serviceId,2" json:"serviceId,omitempty"`
	Type         *string `thrift:"type,3" json:"type,omitempty"`
	Organization *string `thrift:"organization,4" json:"organization,omitempty"`
	AppId        *string `thrift:"appId,5" json:"appId,omitempty"`
	TokenId      *string `thrift:"tokenId,6" json:"tokenId,omitempty"`
	Timestamp    *int64  `thrift:"timestamp,7" json:"timestamp,omitempty"`
	Data         *string `thrift:"data,8" json:"data,omitempty"`
}

func NewPredictRequest() *PredictRequest {
	return &PredictRequest{}
}

var PredictRequest_RequestId_DEFAULT string

func (p *PredictRequest) GetRequestId() string {
	if !p.IsSetRequestId() {
		return PredictRequest_RequestId_DEFAULT
	}
	return *p.RequestId
}

var PredictRequest_ServiceId_DEFAULT string

func (p *PredictRequest) GetServiceId() string {
	if !p.IsSetServiceId() {
		return PredictRequest_ServiceId_DEFAULT
	}
	return *p.ServiceId
}

var PredictRequest_Type_DEFAULT string

func (p *PredictRequest) GetType() string {
	if !p.IsSetType() {
		return PredictRequest_Type_DEFAULT
	}
	return *p.Type
}

var PredictRequest_Organization_DEFAULT string

func (p *PredictRequest) GetOrganization() string {
	if !p.IsSetOrganization() {
		return PredictRequest_Organization_DEFAULT
	}
	return *p.Organization
}

var PredictRequest_AppId_DEFAULT string

func (p *PredictRequest) GetAppId() string {
	if !p.IsSetAppId() {
		return PredictRequest_AppId_DEFAULT
	}
	return *p.AppId
}

var PredictRequest_TokenId_DEFAULT string

func (p *PredictRequest) GetTokenId() string {
	if !p.IsSetTokenId() {
		return PredictRequest_TokenId_DEFAULT
	}
	return *p.TokenId
}

var PredictRequest_Timestamp_DEFAULT int64

func (p *PredictRequest) GetTimestamp() int64 {
	if !p.IsSetTimestamp() {
		return PredictRequest_Timestamp_DEFAULT
	}
	return *p.Timestamp
}

var PredictRequest_Data_DEFAULT string

func (p *PredictRequest) GetData() string {
	if !p.IsSetData() {
		return PredictRequest_Data_DEFAULT
	}
	return *p.Data
}
func (p *PredictRequest) IsSetRequestId() bool {
	return p.RequestId != nil
}

func (p *PredictRequest) IsSetServiceId() bool {
	return p.ServiceId != nil
}

func (p *PredictRequest) IsSetType() bool {
	return p.Type != nil
}

func (p *PredictRequest) IsSetOrganization() bool {
	return p.Organization != nil
}

func (p *PredictRequest) IsSetAppId() bool {
	return p.AppId != nil
}

func (p *PredictRequest) IsSetTokenId() bool {
	return p.TokenId != nil
}

func (p *PredictRequest) IsSetTimestamp() bool {
	return p.Timestamp != nil
}

func (p *PredictRequest) IsSetData() bool {
	return p.Data != nil
}

func (p *PredictRequest) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.readField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.readField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.readField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.readField8(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *PredictRequest) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.RequestId = &v
	}
	return nil
}

func (p *PredictRequest) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.ServiceId = &v
	}
	return nil
}

func (p *PredictRequest) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.Type = &v
	}
	return nil
}

func (p *PredictRequest) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.Organization = &v
	}
	return nil
}

func (p *PredictRequest) readField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.AppId = &v
	}
	return nil
}

func (p *PredictRequest) readField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.TokenId = &v
	}
	return nil
}

func (p *PredictRequest) readField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 7: ", err)
	} else {
		p.Timestamp = &v
	}
	return nil
}

func (p *PredictRequest) readField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 8: ", err)
	} else {
		p.Data = &v
	}
	return nil
}

func (p *PredictRequest) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("PredictRequest"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField7(oprot); err != nil {
		return err
	}
	if err := p.writeField8(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *PredictRequest) writeField1(oprot thrift.TProtocol) (err error) {
	if p.IsSetRequestId() {
		if err := oprot.WriteFieldBegin("requestId", thrift.STRING, 1); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:requestId: ", p), err)
		}
		if err := oprot.WriteString(string(*p.RequestId)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.requestId (1) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 1:requestId: ", p), err)
		}
	}
	return err
}

func (p *PredictRequest) writeField2(oprot thrift.TProtocol) (err error) {
	if p.IsSetServiceId() {
		if err := oprot.WriteFieldBegin("serviceId", thrift.STRING, 2); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:serviceId: ", p), err)
		}
		if err := oprot.WriteString(string(*p.ServiceId)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.serviceId (2) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 2:serviceId: ", p), err)
		}
	}
	return err
}

func (p *PredictRequest) writeField3(oprot thrift.TProtocol) (err error) {
	if p.IsSetType() {
		if err := oprot.WriteFieldBegin("type", thrift.STRING, 3); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:type: ", p), err)
		}
		if err := oprot.WriteString(string(*p.Type)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.type (3) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 3:type: ", p), err)
		}
	}
	return err
}

func (p *PredictRequest) writeField4(oprot thrift.TProtocol) (err error) {
	if p.IsSetOrganization() {
		if err := oprot.WriteFieldBegin("organization", thrift.STRING, 4); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:organization: ", p), err)
		}
		if err := oprot.WriteString(string(*p.Organization)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.organization (4) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 4:organization: ", p), err)
		}
	}
	return err
}

func (p *PredictRequest) writeField5(oprot thrift.TProtocol) (err error) {
	if p.IsSetAppId() {
		if err := oprot.WriteFieldBegin("appId", thrift.STRING, 5); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:appId: ", p), err)
		}
		if err := oprot.WriteString(string(*p.AppId)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.appId (5) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 5:appId: ", p), err)
		}
	}
	return err
}

func (p *PredictRequest) writeField6(oprot thrift.TProtocol) (err error) {
	if p.IsSetTokenId() {
		if err := oprot.WriteFieldBegin("tokenId", thrift.STRING, 6); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:tokenId: ", p), err)
		}
		if err := oprot.WriteString(string(*p.TokenId)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.tokenId (6) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 6:tokenId: ", p), err)
		}
	}
	return err
}

func (p *PredictRequest) writeField7(oprot thrift.TProtocol) (err error) {
	if p.IsSetTimestamp() {
		if err := oprot.WriteFieldBegin("timestamp", thrift.I64, 7); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:timestamp: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.Timestamp)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.timestamp (7) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 7:timestamp: ", p), err)
		}
	}
	return err
}

func (p *PredictRequest) writeField8(oprot thrift.TProtocol) (err error) {
	if p.IsSetData() {
		if err := oprot.WriteFieldBegin("data", thrift.STRING, 8); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:data: ", p), err)
		}
		if err := oprot.WriteString(string(*p.Data)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.data (8) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 8:data: ", p), err)
		}
	}
	return err
}

func (p *PredictRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("PredictRequest(%+v)", *p)
}

// Attributes:
//  - Score
//  - RiskLevel
//  - Detail
type PredictResult_ struct {
	Score     *int32  `thrift:"score,1" json:"score,omitempty"`
	RiskLevel *string `thrift:"riskLevel,2" json:"riskLevel,omitempty"`
	Detail    *string `thrift:"detail,3" json:"detail,omitempty"`
}

func NewPredictResult_() *PredictResult_ {
	return &PredictResult_{}
}

var PredictResult__Score_DEFAULT int32

func (p *PredictResult_) GetScore() int32 {
	if !p.IsSetScore() {
		return PredictResult__Score_DEFAULT
	}
	return *p.Score
}

var PredictResult__RiskLevel_DEFAULT string

func (p *PredictResult_) GetRiskLevel() string {
	if !p.IsSetRiskLevel() {
		return PredictResult__RiskLevel_DEFAULT
	}
	return *p.RiskLevel
}

var PredictResult__Detail_DEFAULT string

func (p *PredictResult_) GetDetail() string {
	if !p.IsSetDetail() {
		return PredictResult__Detail_DEFAULT
	}
	return *p.Detail
}
func (p *PredictResult_) IsSetScore() bool {
	return p.Score != nil
}

func (p *PredictResult_) IsSetRiskLevel() bool {
	return p.RiskLevel != nil
}

func (p *PredictResult_) IsSetDetail() bool {
	return p.Detail != nil
}

func (p *PredictResult_) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *PredictResult_) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.Score = &v
	}
	return nil
}

func (p *PredictResult_) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.RiskLevel = &v
	}
	return nil
}

func (p *PredictResult_) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.Detail = &v
	}
	return nil
}

func (p *PredictResult_) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("PredictResult"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *PredictResult_) writeField1(oprot thrift.TProtocol) (err error) {
	if p.IsSetScore() {
		if err := oprot.WriteFieldBegin("score", thrift.I32, 1); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:score: ", p), err)
		}
		if err := oprot.WriteI32(int32(*p.Score)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.score (1) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 1:score: ", p), err)
		}
	}
	return err
}

func (p *PredictResult_) writeField2(oprot thrift.TProtocol) (err error) {
	if p.IsSetRiskLevel() {
		if err := oprot.WriteFieldBegin("riskLevel", thrift.STRING, 2); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:riskLevel: ", p), err)
		}
		if err := oprot.WriteString(string(*p.RiskLevel)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.riskLevel (2) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 2:riskLevel: ", p), err)
		}
	}
	return err
}

func (p *PredictResult_) writeField3(oprot thrift.TProtocol) (err error) {
	if p.IsSetDetail() {
		if err := oprot.WriteFieldBegin("detail", thrift.STRING, 3); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:detail: ", p), err)
		}
		if err := oprot.WriteString(string(*p.Detail)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.detail (3) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 3:detail: ", p), err)
		}
	}
	return err
}

func (p *PredictResult_) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("PredictResult_(%+v)", *p)
}

// Attributes:
//  - Code
//  - Message
type PredictException struct {
	Code    *string `thrift:"code,1" json:"code,omitempty"`
	Message *string `thrift:"message,2" json:"message,omitempty"`
}

func NewPredictException() *PredictException {
	return &PredictException{}
}

var PredictException_Code_DEFAULT string

func (p *PredictException) GetCode() string {
	if !p.IsSetCode() {
		return PredictException_Code_DEFAULT
	}
	return *p.Code
}

var PredictException_Message_DEFAULT string

func (p *PredictException) GetMessage() string {
	if !p.IsSetMessage() {
		return PredictException_Message_DEFAULT
	}
	return *p.Message
}
func (p *PredictException) IsSetCode() bool {
	return p.Code != nil
}

func (p *PredictException) IsSetMessage() bool {
	return p.Message != nil
}

func (p *PredictException) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *PredictException) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.Code = &v
	}
	return nil
}

func (p *PredictException) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.Message = &v
	}
	return nil
}

func (p *PredictException) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("PredictException"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *PredictException) writeField1(oprot thrift.TProtocol) (err error) {
	if p.IsSetCode() {
		if err := oprot.WriteFieldBegin("code", thrift.STRING, 1); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:code: ", p), err)
		}
		if err := oprot.WriteString(string(*p.Code)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.code (1) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 1:code: ", p), err)
		}
	}
	return err
}

func (p *PredictException) writeField2(oprot thrift.TProtocol) (err error) {
	if p.IsSetMessage() {
		if err := oprot.WriteFieldBegin("message", thrift.STRING, 2); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:message: ", p), err)
		}
		if err := oprot.WriteString(string(*p.Message)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.message (2) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 2:message: ", p), err)
		}
	}
	return err
}

func (p *PredictException) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("PredictException(%+v)", *p)
}

func (p *PredictException) Error() string {
	return p.String()
}
